Que ->  
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9



class Solution {
    public int longestConsecutive(int[] nums) {
        int longestLength = 0;
        Map<Integer, Boolean> map = new HashMap<>();
        for(int num : nums){
            map.put(num, Boolean.FALSE);
        }

        for(int num : nums){
            int currentLen = 1;

            int nextNum = num+1;
            while(map.containsKey(nextNum) && !map.get(nextNum)){
                currentLen++;
                map.put(nextNum, Boolean.TRUE);
                nextNum++;
            }

            int prevNum = num-1;
            while(map.containsKey(prevNum) && !map.get(prevNum)){
                currentLen++;
                map.put(prevNum, Boolean.TRUE);
                prevNum--;
            }

            longestLength = Math.max(longestLength, currentLen);
        }

        return longestLength;
    }
}
